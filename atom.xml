<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>简客-记忆</title>
  
  <subtitle>抽象的才是永恒的</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.jk-kj.com/"/>
  <updated>2018-01-16T00:27:49.000Z</updated>
  <id>http://www.jk-kj.com/</id>
  
  <author>
    <name>hottredpen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何提取谷歌chrome浏览器的crx插件</title>
    <link href="http://www.jk-kj.com/2018/01/12/%E5%A6%82%E4%BD%95%E6%8F%90%E5%8F%96%E8%B0%B7%E6%AD%8Cchrome%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84crx%E6%8F%92%E4%BB%B6/"/>
    <id>http://www.jk-kj.com/2018/01/12/如何提取谷歌chrome浏览器的crx插件/</id>
    <published>2018-01-12T01:29:21.000Z</published>
    <updated>2018-01-16T00:27:49.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>自己有翻墙工具，而其他人没有，无法获取到插件</p><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><pre><code>访问Chrome扩展商店搜索需要提取的扩展点击进入扩展详情复制地址栏连接打开chrome-extension-downloader.com粘贴地址点击下载即可</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h4&gt;&lt;p&gt;自己有翻墙工具，而其他人没有，无法获取到插件&lt;/p&gt;
&lt;h4 id=&quot;步骤&quot;&gt;&lt;a href=&quot;#步骤&quot; class=&quot;headerlink
      
    
    </summary>
    
    
      <category term="chrome插件" scheme="http://www.jk-kj.com/tags/chrome%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>zimg图片服务器</title>
    <link href="http://www.jk-kj.com/2017/12/26/zimg%E5%9B%BE%E7%89%87%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://www.jk-kj.com/2017/12/26/zimg图片服务器/</id>
    <published>2017-12-26T03:06:18.000Z</published>
    <updated>2018-01-16T00:27:49.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>公司转移图片服务器，让我负责<br>一直没去弄明白图片服务器的问题，有幸运</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h4&gt;&lt;p&gt;公司转移图片服务器，让我负责&lt;br&gt;一直没去弄明白图片服务器的问题，有幸运&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="zimg" scheme="http://www.jk-kj.com/tags/zimg/"/>
    
      <category term="图片裁剪" scheme="http://www.jk-kj.com/tags/%E5%9B%BE%E7%89%87%E8%A3%81%E5%89%AA/"/>
    
      <category term="图片服务器" scheme="http://www.jk-kj.com/tags/%E5%9B%BE%E7%89%87%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>记一次linux上大文件的转移</title>
    <link href="http://www.jk-kj.com/2017/12/13/%E8%AE%B0%E4%B8%80%E6%AC%A1linux%E4%B8%8A%E5%A4%A7%E6%96%87%E4%BB%B6%E7%9A%84%E8%BD%AC%E7%A7%BB/"/>
    <id>http://www.jk-kj.com/2017/12/13/记一次linux上大文件的转移/</id>
    <published>2017-12-13T04:43:08.000Z</published>
    <updated>2018-01-16T00:27:49.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>服务器的内容转到另一台服务器</p><h3 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h3><h4 id="首先进行了打包"><a href="#首先进行了打包" class="headerlink" title="首先进行了打包"></a>首先进行了打包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar -cvf ./kod.tar ./kod3.1</div></pre></td></tr></table></figure><p>打完包，发现有3个多G<br>就尝试打包压缩<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar -zcvf ./kod2.tar.gz ./kod3.1</div></pre></td></tr></table></figure></p><p>结果还是3G多，只压缩了200M</p><h4 id="进行传输"><a href="#进行传输" class="headerlink" title="进行传输"></a>进行传输</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp ./kod.tar root@192.168.60.168:/tmp</div></pre></td></tr></table></figure><p>开始有5M/s的速度，可慢慢地变得只有800K/s<br>最气人的是在60%时的时候居然出现了<code>stalled</code></p><h4 id="排查问题"><a href="#排查问题" class="headerlink" title="排查问题"></a>排查问题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div><div class="line">When transferring large files(for example mksysb images) using scp through a firewall, the scp connection stalls.</div><div class="line">Cause:</div><div class="line"></div><div class="line">The reason for scp to stall, is because scp greedily grabs as much bandwith of the network as possible when it transfers files, any delay caused by the network switch of the firewall can easily make the TCP connection stalled.</div><div class="line">Solution:</div><div class="line"></div><div class="line">There’s a solution to this problem: Add “-l 8192″ to the scp command.</div><div class="line"></div><div class="line">Adding the option “-l 8192″ limits the scp session bandwith up to 8192 Kbit/second, which seems to work safe and fast enough (up to 1 MB/second):</div></pre></td></tr></table></figure><h4 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h4><p>在原有的命令行上加上了<code>-l 8192</code>可以维持在1M/s<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp -l 8192 ./kod.tar root@192.168.60.168:/tmp</div></pre></td></tr></table></figure></p><p>开始速度也有6M/s，后面速度一直维持在1M/s，中间无<code>stalled</code></p><p>如果是<code>-l 16000</code>则维持在2M/s，以此类推</p><h4 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar -xvf kod.tar</div></pre></td></tr></table></figure><p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar -zxvf kod.tar.gz</div></pre></td></tr></table></figure></p><h4 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h4><p>因为转移的文件有很多，而且都很大，我们不可能一直开者等待它传完，这就需要后台运行</p><p>先输入密码进行传输<br>然后用<code>ctrl+z</code>,将当前进程挂起到后台暂停运行，执行一些别的操作<br>然后用 <code>bg</code> 来将挂起的进程放在后台(也可以用 <code>fg</code> 来将挂起的进程重新放回前台)继续运行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[root@pvcent107 build]# scp -l 8192 ./kod.tar root@192.168.60.168:/tmp</div><div class="line">---------ctrl+zx</div><div class="line">[1]+  Stopped                 scp -l 8192 ./kod.tar root@192.168.60.168:/tmp</div><div class="line">[root@pvcent107 build]# bg %1</div><div class="line">[1]+ scp -l 8192 ./kod.tar root@192.168.60.168:/tmp &amp;</div><div class="line">[root@pvcent107 build]# jobs</div><div class="line">[1]+  Running                 scp -l 8192 ./kod.tar root@192.168.60.168:/tmp &amp;</div><div class="line">[root@pvcent107 build]# disown -h %1</div><div class="line">[root@pvcent107 build]# ps -ef |grep kod</div><div class="line">root      5790  5577  1 10:04 pts/3    00:00:00 scp -l 8192 ./kod.tar root@192.168.60.168:/tmp</div><div class="line">root      5824  5577  0 10:05 pts/3    00:00:00 grep kod</div></pre></td></tr></table></figure></p><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>有时jobs会有多个，注意自己的文件大小是否正常，我就别坑了1次，没传输完成（完成了一个jobs），以为完成了就进行解压缩了。</p><h4 id="400G个文件打包"><a href="#400G个文件打包" class="headerlink" title="400G个文件打包"></a>400G个文件打包</h4><p>之前想着。。。400G的文件需要切分-，-！可是用了切分时，却始终没有获取完整的包，好几次我都相信我的总包才80G</p><p>最后用了整包打包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nohup tar -cjf kod.tar.bz2 ./kod &gt;/dev/null 2&gt;&amp;1 &amp;</div></pre></td></tr></table></figure></p><p>打完包发现才有400G+…….我的天，整整打包了一天一夜</p><h4 id="400G的传输"><a href="#400G的传输" class="headerlink" title="400G的传输"></a>400G的传输</h4><p>scp 已经无法满足，因为万一中间来个服务器重启，或者其他因素那over了，那流量可就白白流失了<br>最后采用了<code>rsync</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rsync -P --rsh=ssh ./kod_all.tar.bz2 112.13.14.156:/data/</div></pre></td></tr></table></figure></p><p>然后输入密码<br>再ctrl+z 暂停<br>再bg %1  放入后台（假设当前后台允许索引为1）<br>然后用jobs查看<br>如果你当前退出过当前终端，jobs已经无法查看到后台运行的进程，只能用ps<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ps -ef |grep kod</div></pre></td></tr></table></figure></p><p>会有如下的显示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">root     175100 174758 47 08:10 pts/2    00:15:13 rsync -P --rsh=ssh ./kod_all.tar.bz2 112.13.91.176:/data/</div><div class="line">root     183245 174758  0 08:42 pts/2    00:00:00 grep --color=auto kod</div></pre></td></tr></table></figure></p><p>其中<code>00:15:13</code>指本次断点续传进行的时间。<br>当传输了200G以后，继续进行断点续传，这个时间会有好长一段时间是不更新的（作者认为它在寻找上一次的断点，因为文件大了寻找的时间会久一点），如果你这个时候马上关闭总端，很有可能本次传输就没执行，我就被坑了一次，一觉醒来一点就没传。。。</p><h4 id="rsync与scp的差异"><a href="#rsync与scp的差异" class="headerlink" title="rsync与scp的差异"></a>rsync与scp的差异</h4><p>用scp时，这边传多少，另一个服务器就显示文件实时大小<br>而用rsync时，另一个服务器不实时显示文件大小，只有将这边的进程暂时kill掉，才能知道到底传了多少（可能我这个办法比较粗暴）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">kill -9 175100</div></pre></td></tr></table></figure></p><h4 id="400G的解压"><a href="#400G的解压" class="headerlink" title="400G的解压"></a>400G的解压</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nohup tar -xjf ./kod_all.tar.bz2 &gt; /dev/null 2&gt;&amp;1 &amp;</div></pre></td></tr></table></figure><p>其他查看操作同上面</p><h3 id="其他，拆分打包（失败了）"><a href="#其他，拆分打包（失败了）" class="headerlink" title="其他，拆分打包（失败了）"></a>其他，拆分打包（失败了）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nohup tar -cjf - kod/ |split -b 10000m - kod.tar.bz2. &gt;/dev/null 2&gt;&amp;1 &amp;</div></pre></td></tr></table></figure><p>它会生成<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">-rw-r--r-- 1 Administrator 197121   5242880 十二 27 08:39 kod.tar.bz2.aa</div><div class="line">-rw-r--r-- 1 Administrator 197121   5242880 十二 27 08:39 kod.tar.bz2.ab</div><div class="line">-rw-r--r-- 1 Administrator 197121   5242880 十二 27 08:39 kod.tar.bz2.ac</div><div class="line">-rw-r--r-- 1 Administrator 197121   5242880 十二 27 08:39 kod.tar.bz2.ad</div><div class="line">-rw-r--r-- 1 Administrator 197121   5242880 十二 27 08:39 kod.tar.bz2.ae</div><div class="line">-rw-r--r-- 1 Administrator 197121   5242880 十二 27 08:39 kod.tar.bz2.af</div><div class="line">-rw-r--r-- 1 Administrator 197121   5242880 十二 27 08:39 kod.tar.bz2.ag</div></pre></td></tr></table></figure></p><p>后面默认2位，字符逐渐增加<br>它的解压<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nohup cat pinkephp.tar.bz2.* | tar -xj &amp;</div></pre></td></tr></table></figure></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://linux.cn/article-7170-1.html" target="_blank" rel="external">https://linux.cn/article-7170-1.html</a></p><p><a href="http://blog.csdn.net/tdstds/article/details/24870535" target="_blank" rel="external">http://blog.csdn.net/tdstds/article/details/24870535</a></p><p><a href="http://blog.csdn.net/eroswang/article/details/5555415/" target="_blank" rel="external">http://blog.csdn.net/eroswang/article/details/5555415/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;服务器的内容转到另一台服务器&lt;/p&gt;
&lt;h3 id=&quot;过程&quot;&gt;&lt;a href=&quot;#过程&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
    
      <category term="linux" scheme="http://www.jk-kj.com/tags/linux/"/>
    
      <category term="scp" scheme="http://www.jk-kj.com/tags/scp/"/>
    
      <category term="rsync" scheme="http://www.jk-kj.com/tags/rsync/"/>
    
      <category term="打包" scheme="http://www.jk-kj.com/tags/%E6%89%93%E5%8C%85/"/>
    
      <category term="断点续传" scheme="http://www.jk-kj.com/tags/%E6%96%AD%E7%82%B9%E7%BB%AD%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>记一次网站字体采用思源字体</title>
    <link href="http://www.jk-kj.com/2017/12/07/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%BD%91%E7%AB%99%E5%AD%97%E4%BD%93%E9%87%87%E7%94%A8%E6%80%9D%E6%BA%90%E5%AD%97%E4%BD%93/"/>
    <id>http://www.jk-kj.com/2017/12/07/记一次网站字体采用思源字体/</id>
    <published>2017-12-07T04:46:14.000Z</published>
    <updated>2018-01-16T00:27:49.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>客户想让他的网站都显示思源字体</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>fontsquirrel<br><a href="https://www.fontsquirrel.com" target="_blank" rel="external">https://www.fontsquirrel.com</a><br>CSS @font-face属性实现在网页中嵌入任意字体<br><a href="http://www.jb51.net/css/23073.html" target="_blank" rel="external">http://www.jb51.net/css/23073.html</a></p><p>如何在网页中嵌入自己想要的字体(实例下载)<br><a href="http://blog.csdn.net/sinolzeng/article/details/41802951" target="_blank" rel="external">http://blog.csdn.net/sinolzeng/article/details/41802951</a></p><h3 id="linux安装字体（错误的方法）"><a href="#linux安装字体（错误的方法）" class="headerlink" title="linux安装字体（错误的方法）"></a>linux安装字体（错误的方法）</h3><h4 id="下载字体"><a href="#下载字体" class="headerlink" title="下载字体"></a>下载字体</h4><p>下载思源全套字体（字体文件名称：NotoSansHans）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https://pan.baidu.com/s/1uJBBK</div></pre></td></tr></table></figure></p><p>windows的字体比较多，其字体文件位于 C:\WINDOWS\Fonts,如果想额外安装也可以到这里找找</p><p>字体格式有ttf和otf等多重后缀，linux上ttf和oft都可以</p><h4 id="移动文件到服务器指定位置"><a href="#移动文件到服务器指定位置" class="headerlink" title="移动文件到服务器指定位置"></a>移动文件到服务器指定位置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># mkdir /usr/share/fonts/NotoSansHans</div><div class="line"># cp arial*.otf /usr/share/fonts/NotoSansHans/</div><div class="line">或</div><div class="line"># cp arial*.ttf /usr/share/fonts/NotoSansHans/</div></pre></td></tr></table></figure><h4 id="为刚加入的字体设置缓存使之有效"><a href="#为刚加入的字体设置缓存使之有效" class="headerlink" title="为刚加入的字体设置缓存使之有效"></a>为刚加入的字体设置缓存使之有效</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># cd /usr/share/font/NotoSansHans</div><div class="line"># fc-cache -fv</div></pre></td></tr></table></figure><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>因为我在windows里先安装了思源字体，并在<code>Noto Sans S Chinese</code>中找到了思源字体，所以font-family中我用<code>Noto Sans S Chinese</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">body &#123;</div><div class="line">    font-family: &quot;Noto Sans S Chinese&quot;, Helvetica, Arial, sans-serif;</div><div class="line">    -webkit-font-smoothing: antialiased;</div><div class="line">    color: #777777;</div><div class="line">    font-size: 14px;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p>为什么文件名是<code>NotoSansHans</code>，安装后需要<code>Noto Sans S Chinese</code><br>这里有个疑惑</p><h4 id="疑惑解决（2017-12-8）"><a href="#疑惑解决（2017-12-8）" class="headerlink" title="疑惑解决（2017.12.8）"></a>疑惑解决（2017.12.8）</h4><p>自己本地安装了ttf包后，生成了Noto Sans S Chinese字体，可是这个字体不是服务器里的</p><p>也就是说，我在linux上安装的字体只能在linux上使用,浏览器里使用一个是看客户端有没有这个字体，另一个是你的css中引入如ttf之类的字体资源，但是对于中文来说，要把整个字体都方法css上，大概要10M以上（这个肯定不是个办法）</p><h3 id="css-font-face引入-只能引入英文字体"><a href="#css-font-face引入-只能引入英文字体" class="headerlink" title="css font-face引入(只能引入英文字体)"></a>css font-face引入(只能引入英文字体)</h3><p>在<br><a href="https://www.fontsquirrel.com" target="_blank" rel="external">https://www.fontsquirrel.com</a><br>中找到自己需要的字体</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">@font-face &#123;</div><div class="line">font-family: &apos;fontNameRegular&apos;;</div><div class="line">src: url(&apos;fontName.eot&apos;);</div><div class="line">src: local(&apos;fontName Regular&apos;),</div><div class="line">local(&apos;fontName&apos;),</div><div class="line">url(&apos;fontName.woff&apos;) format(&apos;woff&apos;),</div><div class="line">url(&apos;fontName.ttf&apos;) format(&apos;truetype&apos;),</div><div class="line">url(&apos;fontName.svg#fontName&apos;) format(&apos;svg&apos;);</div><div class="line">&#125;</div><div class="line">/*其中fontName替换为你的字体名称*/</div></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>想在网页中全部使用某不常用的字体，几乎是不可取的方法，除非客户端里大家都安装了该字体</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;客户想让他的网站都显示思源字体&lt;/p&gt;
&lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title
      
    
    </summary>
    
    
      <category term="css字体" scheme="http://www.jk-kj.com/tags/css%E5%AD%97%E4%BD%93/"/>
    
      <category term="字体" scheme="http://www.jk-kj.com/tags/%E5%AD%97%E4%BD%93/"/>
    
  </entry>
  
  <entry>
    <title>elementui引入iconfont</title>
    <link href="http://www.jk-kj.com/2017/11/10/elementui%E5%BC%95%E5%85%A5iconfont/"/>
    <id>http://www.jk-kj.com/2017/11/10/elementui引入iconfont/</id>
    <published>2017-11-10T07:58:02.000Z</published>
    <updated>2018-01-16T00:27:49.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>element官方的icon太少</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="http://blog.csdn.net/b376924098/article/details/78286880#reply" target="_blank" rel="external">http://blog.csdn.net/b376924098/article/details/78286880#reply</a></p><p>CSS3 @font-face [<a href="http://www.w3cplus.com/content/css3-font-face" target="_blank" rel="external">http://www.w3cplus.com/content/css3-font-face</a>]</p><h3 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h3><ul><li>去阿里巴巴矢量图，地址;<a href="http://www.iconfont.cn/" target="_blank" rel="external">http://www.iconfont.cn/</a></li><li>进入网站登录账户后，新建一个项目</li><li>选择一些自己要用到的图标如上图点击购物车按钮添加到购物车。</li></ul><p> <img src="http://img.blog.csdn.net/20171019170321456?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYjM3NjkyNDA5OA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center"></p><ul><li>保存时，以yourprogect-icon命名</li><li>并命名一个自己的字体名称，jkkjFontFamily</li><li>在iconfont.css添加以下代码<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[class^=&quot;jkkj-icon&quot;], [class*=&quot; jkkj-icon&quot;] &#123;</div><div class="line">  font-family:&quot;jkkjFontFamily&quot; !important;</div><div class="line">  /* 以下内容参照第三方图标库本身的规则 */</div><div class="line">  font-size: 18px;</div><div class="line">  font-style:normal;</div><div class="line">  -webkit-font-smoothing: antialiased;</div><div class="line">  -moz-osx-font-smoothing: grayscale;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><p>效果类似于下图<br><img src="http://img.blog.csdn.net/20171019171813100?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYjM3NjkyNDA5OA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;element官方的icon太少&lt;/p&gt;
&lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
      <category term="elementui" scheme="http://www.jk-kj.com/tags/elementui/"/>
    
      <category term="iconfont" scheme="http://www.jk-kj.com/tags/iconfont/"/>
    
  </entry>
  
  <entry>
    <title>node-sass安装不成功的解决方法</title>
    <link href="http://www.jk-kj.com/2017/11/09/node-sass%E5%AE%89%E8%A3%85%E4%B8%8D%E6%88%90%E5%8A%9F%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://www.jk-kj.com/2017/11/09/node-sass安装不成功的解决方法/</id>
    <published>2017-11-09T07:55:24.000Z</published>
    <updated>2018-01-16T00:27:49.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>每次安装node-sass都被墙导致安装不成功</p><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="http://blog.csdn.net/qq_35440678/article/details/51909327" target="_blank" rel="external">http://blog.csdn.net/qq_35440678/article/details/51909327</a></p><h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h4><p>直接用淘宝的镜像安装成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</div><div class="line">cnpm install node-sass</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h4&gt;&lt;p&gt;每次安装node-sass都被墙导致安装不成功&lt;/p&gt;
&lt;h4 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlin
      
    
    </summary>
    
    
      <category term="nodejs" scheme="http://www.jk-kj.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>vscode配置eslint</title>
    <link href="http://www.jk-kj.com/2017/11/03/vscode%E9%85%8D%E7%BD%AEeslint/"/>
    <id>http://www.jk-kj.com/2017/11/03/vscode配置eslint/</id>
    <published>2017-11-03T01:08:31.000Z</published>
    <updated>2018-01-16T00:27:49.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>公司开始了新项目用了vue，因为用了某人开源的基础架构，所以被动的被用上了eslint，刚开始用sublime写vue，结果各种规法错误，很是恼火。最后按网上教程用了vscode+eslint插件，一键格式化错误，牛X死了</p><h4 id="安装eslint插件"><a href="#安装eslint插件" class="headerlink" title="安装eslint插件"></a>安装eslint插件</h4><p>安装并配置完成 ESLint 后，我们继续回到 VSCode 进行扩展设置，依次点击 文件 &gt; 首选项 &gt; 设置 打开 VSCode 配置文件,添加如下配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&quot;eslint.autoFixOnSave&quot;: true,</div><div class="line">&quot;files.autoSave&quot;:&quot;off&quot;,</div><div class="line">&quot;eslint.validate&quot;: [</div><div class="line">   &quot;javascript&quot;,</div><div class="line">   &quot;javascriptreact&quot;,</div><div class="line">   &quot;html&quot;,</div><div class="line">   &#123; &quot;language&quot;: &quot;vue&quot;, &quot;autoFix&quot;: true &#125;</div><div class="line"> ],</div><div class="line"> &quot;eslint.options&quot;: &#123;</div><div class="line">    &quot;plugins&quot;: [&quot;html&quot;]</div><div class="line"> &#125;</div></pre></td></tr></table></figure><p>这样每次保存的时候就可以根据根目录下.eslintrc.js你配置的eslint规则来检查和做一些简单的fix。</p><p>当前eslint规则</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div></pre></td><td class="code"><pre><div class="line">module.exports = &#123;</div><div class="line">    root: true,</div><div class="line">    parser: &apos;babel-eslint&apos;,</div><div class="line">    parserOptions: &#123;</div><div class="line">        sourceType: &apos;module&apos;</div><div class="line">    &#125;,</div><div class="line">    env: &#123;</div><div class="line">        browser: true,</div><div class="line">        node: true,</div><div class="line">        es6: true,</div><div class="line">    &#125;,</div><div class="line">    extends: &apos;eslint:recommended&apos;,</div><div class="line">    // required to lint *.vue files</div><div class="line">    plugins: [</div><div class="line">        &apos;html&apos;</div><div class="line">    ],</div><div class="line">    // check if imports actually resolve</div><div class="line">    &apos;settings&apos;: &#123;</div><div class="line">        &apos;import/resolver&apos;: &#123;</div><div class="line">            &apos;webpack&apos;: &#123;</div><div class="line">                &apos;config&apos;: &apos;build/webpack.base.conf.js&apos;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    // add your custom rules here</div><div class="line">    //it is base on https://github.com/vuejs/eslint-config-vue</div><div class="line">    &apos;rules&apos;: &#123;</div><div class="line">        &apos;accessor-pairs&apos;: 2,</div><div class="line">        &apos;arrow-spacing&apos;: [2, &#123; &apos;before&apos;: true, &apos;after&apos;: true &#125;],</div><div class="line">        &apos;block-spacing&apos;: [2, &apos;always&apos;],</div><div class="line">        &apos;brace-style&apos;: [2, &apos;1tbs&apos;, &#123; &apos;allowSingleLine&apos;: true &#125;],</div><div class="line">        &apos;camelcase&apos;: [0, &#123; &apos;properties&apos;: &apos;always&apos; &#125;],</div><div class="line">        &apos;comma-dangle&apos;: [2, &apos;never&apos;],</div><div class="line">        &apos;comma-spacing&apos;: [2, &#123; &apos;before&apos;: false, &apos;after&apos;: true &#125;],</div><div class="line">        &apos;comma-style&apos;: [2, &apos;last&apos;],</div><div class="line">        &apos;constructor-super&apos;: 2,</div><div class="line">        &apos;curly&apos;: [2, &apos;multi-line&apos;],</div><div class="line">        &apos;dot-location&apos;: [2, &apos;property&apos;],</div><div class="line">        &apos;eol-last&apos;: 2,</div><div class="line">        &apos;eqeqeq&apos;: [2, &apos;allow-null&apos;],</div><div class="line">        &apos;generator-star-spacing&apos;: [2, &#123; &apos;before&apos;: true, &apos;after&apos;: true &#125;],</div><div class="line">        &apos;handle-callback-err&apos;: [2, &apos;^(err|error)$&apos; ],</div><div class="line">        &apos;indent&apos;: [2, 2, &#123; &apos;SwitchCase&apos;: 1 &#125;],</div><div class="line">        &apos;jsx-quotes&apos;: [2, &apos;prefer-single&apos;],</div><div class="line">        &apos;key-spacing&apos;: [2, &#123; &apos;beforeColon&apos;: false, &apos;afterColon&apos;: true &#125;],</div><div class="line">        &apos;keyword-spacing&apos;: [2, &#123; &apos;before&apos;: true, &apos;after&apos;: true &#125;],</div><div class="line">        &apos;new-cap&apos;: [2, &#123; &apos;newIsCap&apos;: true, &apos;capIsNew&apos;: false &#125;],</div><div class="line">        &apos;new-parens&apos;: 2,</div><div class="line">        &apos;no-array-constructor&apos;: 2,</div><div class="line">        &apos;no-caller&apos;: 2,</div><div class="line">        &apos;no-console&apos;: &apos;off&apos;,</div><div class="line">        &apos;no-class-assign&apos;: 2,</div><div class="line">        &apos;no-cond-assign&apos;: 2,</div><div class="line">        &apos;no-const-assign&apos;: 2,</div><div class="line">        &apos;no-control-regex&apos;: 2,</div><div class="line">        &apos;no-delete-var&apos;: 2,</div><div class="line">        &apos;no-dupe-args&apos;: 2,</div><div class="line">        &apos;no-dupe-class-members&apos;: 2,</div><div class="line">        &apos;no-dupe-keys&apos;: 2,</div><div class="line">        &apos;no-duplicate-case&apos;: 2,</div><div class="line">        &apos;no-empty-character-class&apos;: 2,</div><div class="line">        &apos;no-empty-pattern&apos;: 2,</div><div class="line">        &apos;no-eval&apos;: 2,</div><div class="line">        &apos;no-ex-assign&apos;: 2,</div><div class="line">        &apos;no-extend-native&apos;: 2,</div><div class="line">        &apos;no-extra-bind&apos;: 2,</div><div class="line">        &apos;no-extra-boolean-cast&apos;: 2,</div><div class="line">        &apos;no-extra-parens&apos;: [2, &apos;functions&apos;],</div><div class="line">        &apos;no-fallthrough&apos;: 2,</div><div class="line">        &apos;no-floating-decimal&apos;: 2,</div><div class="line">        &apos;no-func-assign&apos;: 2,</div><div class="line">        &apos;no-implied-eval&apos;: 2,</div><div class="line">        &apos;no-inner-declarations&apos;: [2, &apos;functions&apos;],</div><div class="line">        &apos;no-invalid-regexp&apos;: 2,</div><div class="line">        &apos;no-irregular-whitespace&apos;: 2,</div><div class="line">        &apos;no-iterator&apos;: 2,</div><div class="line">        &apos;no-label-var&apos;: 2,</div><div class="line">        &apos;no-labels&apos;: [2, &#123; &apos;allowLoop&apos;: false, &apos;allowSwitch&apos;: false &#125;],</div><div class="line">        &apos;no-lone-blocks&apos;: 2,</div><div class="line">        &apos;no-mixed-spaces-and-tabs&apos;: 2,</div><div class="line">        &apos;no-multi-spaces&apos;: 2,</div><div class="line">        &apos;no-multi-str&apos;: 2,</div><div class="line">        &apos;no-multiple-empty-lines&apos;: [2, &#123; &apos;max&apos;: 1 &#125;],</div><div class="line">        &apos;no-native-reassign&apos;: 2,</div><div class="line">        &apos;no-negated-in-lhs&apos;: 2,</div><div class="line">        &apos;no-new-object&apos;: 2,</div><div class="line">        &apos;no-new-require&apos;: 2,</div><div class="line">        &apos;no-new-symbol&apos;: 2,</div><div class="line">        &apos;no-new-wrappers&apos;: 2,</div><div class="line">        &apos;no-obj-calls&apos;: 2,</div><div class="line">        &apos;no-octal&apos;: 2,</div><div class="line">        &apos;no-octal-escape&apos;: 2,</div><div class="line">        &apos;no-path-concat&apos;: 2,</div><div class="line">        &apos;no-proto&apos;: 2,</div><div class="line">        &apos;no-redeclare&apos;: 2,</div><div class="line">        &apos;no-regex-spaces&apos;: 2,</div><div class="line">        &apos;no-return-assign&apos;: [2, &apos;except-parens&apos;],</div><div class="line">        &apos;no-self-assign&apos;: 2,</div><div class="line">        &apos;no-self-compare&apos;: 2,</div><div class="line">        &apos;no-sequences&apos;: 2,</div><div class="line">        &apos;no-shadow-restricted-names&apos;: 2,</div><div class="line">        &apos;no-spaced-func&apos;: 2,</div><div class="line">        &apos;no-sparse-arrays&apos;: 2,</div><div class="line">        &apos;no-this-before-super&apos;: 2,</div><div class="line">        &apos;no-throw-literal&apos;: 2,</div><div class="line">        &apos;no-trailing-spaces&apos;: 2,</div><div class="line">        &apos;no-undef&apos;: 2,</div><div class="line">        &apos;no-undef-init&apos;: 2,</div><div class="line">        &apos;no-unexpected-multiline&apos;: 2,</div><div class="line">        &apos;no-unmodified-loop-condition&apos;: 2,</div><div class="line">        &apos;no-unneeded-ternary&apos;: [2, &#123; &apos;defaultAssignment&apos;: false &#125;],</div><div class="line">        &apos;no-unreachable&apos;: 2,</div><div class="line">        &apos;no-unsafe-finally&apos;: 2,</div><div class="line">        &apos;no-unused-vars&apos;: [2, &#123; &apos;vars&apos;: &apos;all&apos;, &apos;args&apos;: &apos;none&apos; &#125;],</div><div class="line">        &apos;no-useless-call&apos;: 2,</div><div class="line">        &apos;no-useless-computed-key&apos;: 2,</div><div class="line">        &apos;no-useless-constructor&apos;: 2,</div><div class="line">        &apos;no-useless-escape&apos;: 0,</div><div class="line">        &apos;no-whitespace-before-property&apos;: 2,</div><div class="line">        &apos;no-with&apos;: 2,</div><div class="line">        &apos;one-var&apos;: [2, &#123; &apos;initialized&apos;: &apos;never&apos; &#125;],</div><div class="line">        &apos;operator-linebreak&apos;: [2, &apos;after&apos;, &#123; &apos;overrides&apos;: &#123; &apos;?&apos;: &apos;before&apos;, &apos;:&apos;: &apos;before&apos; &#125; &#125;],</div><div class="line">        &apos;padded-blocks&apos;: [2, &apos;never&apos;],</div><div class="line">        &apos;quotes&apos;: [2, &apos;single&apos;, &#123; &apos;avoidEscape&apos;: true, &apos;allowTemplateLiterals&apos;: true &#125;],</div><div class="line">        &apos;semi&apos;: [2, &apos;never&apos;],</div><div class="line">        &apos;semi-spacing&apos;: [2, &#123; &apos;before&apos;: false, &apos;after&apos;: true &#125;],</div><div class="line">        &apos;space-before-blocks&apos;: [2, &apos;always&apos;],</div><div class="line">        &apos;space-before-function-paren&apos;: [2, &apos;never&apos;],</div><div class="line">        &apos;space-in-parens&apos;: [2, &apos;never&apos;],</div><div class="line">        &apos;space-infix-ops&apos;: 2,</div><div class="line">        &apos;space-unary-ops&apos;: [2, &#123; &apos;words&apos;: true, &apos;nonwords&apos;: false &#125;],</div><div class="line">        &apos;spaced-comment&apos;: [2, &apos;always&apos;, &#123; &apos;markers&apos;: [&apos;global&apos;, &apos;globals&apos;, &apos;eslint&apos;, &apos;eslint-disable&apos;, &apos;*package&apos;, &apos;!&apos;, &apos;,&apos;] &#125;],</div><div class="line">        &apos;template-curly-spacing&apos;: [2, &apos;never&apos;],</div><div class="line">        &apos;use-isnan&apos;: 2,</div><div class="line">        &apos;valid-typeof&apos;: 2,</div><div class="line">        &apos;wrap-iife&apos;: [2, &apos;any&apos;],</div><div class="line">        &apos;yield-star-spacing&apos;: [2, &apos;both&apos;],</div><div class="line">        &apos;yoda&apos;: [2, &apos;never&apos;],</div><div class="line">        &apos;prefer-const&apos;: 2,</div><div class="line">        &apos;no-debugger&apos;: process.env.NODE_ENV === &apos;production&apos; ? 2 : 0,</div><div class="line">        &apos;object-curly-spacing&apos;: [2, &apos;always&apos;, &#123; objectsInObjects: false &#125;],</div><div class="line">        &apos;array-bracket-spacing&apos;: [2, &apos;never&apos;]</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p><code>shift+ctrl+p</code>    =&gt; 选择 <code>eslint fix all auto-fixable problems</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h4&gt;&lt;p&gt;公司开始了新项目用了vue，因为用了某人开源的基础架构，所以被动的被用上了eslint，刚开始用sublime写vue，结果各种规法错误，很
      
    
    </summary>
    
    
      <category term="vscode" scheme="http://www.jk-kj.com/tags/vscode/"/>
    
      <category term="eslint" scheme="http://www.jk-kj.com/tags/eslint/"/>
    
  </entry>
  
  <entry>
    <title>GitBash修改默认打开之后的路径</title>
    <link href="http://www.jk-kj.com/2017/11/03/GitBash%E4%BF%AE%E6%94%B9%E9%BB%98%E8%AE%A4%E6%89%93%E5%BC%80%E4%B9%8B%E5%90%8E%E7%9A%84%E8%B7%AF%E5%BE%84/"/>
    <id>http://www.jk-kj.com/2017/11/03/GitBash修改默认打开之后的路径/</id>
    <published>2017-11-03T00:58:26.000Z</published>
    <updated>2017-11-05T09:16:12.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>在公司windows下用gitbash，每次打开都要切换到D盘指定目录，非常费时，网上搜了一下果真有对应方法</p><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="http://blog.csdn.net/zzfenglin/article/details/54646541" target="_blank" rel="external">http://blog.csdn.net/zzfenglin/article/details/54646541</a></p><h4 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h4><p>在“Git Bash”快捷方式上点击鼠标右键，然后选择“属性”，会弹出如下截图的提示框：</p><p><img src="http://img.blog.csdn.net/20170121165353158"></p><p>我们可以看到在“目标”后面的输入框中有操作的命令，在命令的最后是“–cd-to-home”，就是这条命令在快捷方式打开的时候切换到“/c/Users/Administrator”路径了。</p><p>假如，我们想把默认路径修改为“D:\android_workspace”，那我们需要操作两步：</p><p>1.将“目录”后面输入框中命令结尾部分去掉，即删掉“–cd-to-home”。</p><p>2.将“起始位置”后面的输入框中的内容修改为我们想要的默认路径“D:\android_workspace”（注意：这个路径是根据你自己代码工程的位置而定的）</p><p>修改之后的操作截图如下：</p><p><img src="http://img.blog.csdn.net/20170121165423783"></p><p>修改之后，点击“确定”，然后重新打开“Git Bash”，就会自动切换到我们想要的路径</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h4&gt;&lt;p&gt;在公司windows下用gitbash，每次打开都要切换到D盘指定目录，非常费时，网上搜了一下果真有对应方法&lt;/p&gt;
&lt;h4 id=&quot;参考&quot;
      
    
    </summary>
    
    
      <category term="git" scheme="http://www.jk-kj.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>git提交请求免输入git服务器密码</title>
    <link href="http://www.jk-kj.com/2017/11/01/git%E6%8F%90%E4%BA%A4%E8%AF%B7%E6%B1%82%E5%85%8D%E8%BE%93%E5%85%A5git%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AF%86%E7%A0%81/"/>
    <id>http://www.jk-kj.com/2017/11/01/git提交请求免输入git服务器密码/</id>
    <published>2017-11-01T00:50:58.000Z</published>
    <updated>2018-01-16T00:27:49.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>每次百度这内容，都要花费我不少时间</p><h4 id="客户端初始化"><a href="#客户端初始化" class="headerlink" title="客户端初始化"></a>客户端初始化</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user.name &quot;yourname&quot;  </div><div class="line">git config --global user.email &quot;your@email.com&quot;</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;XXX@company.com&quot;</div></pre></td></tr></table></figure><p>在git服务器下的git主目录下面的.ssh文件下添加（修改）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">authorized_keys</div></pre></td></tr></table></figure></p><p>重新启动sshd<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service sshd restart</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h4&gt;&lt;p&gt;每次百度这内容，都要花费我不少时间&lt;/p&gt;
&lt;h4 id=&quot;客户端初始化&quot;&gt;&lt;a href=&quot;#客户端初始化&quot; class=&quot;headerl
      
    
    </summary>
    
    
      <category term="git" scheme="http://www.jk-kj.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>记一次在vue中使用axios，参数没有序列化</title>
    <link href="http://www.jk-kj.com/2017/11/01/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%9C%A8vue%E4%B8%AD%E4%BD%BF%E7%94%A8axios%EF%BC%8C%E5%8F%82%E6%95%B0%E6%B2%A1%E6%9C%89%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <id>http://www.jk-kj.com/2017/11/01/记一次在vue中使用axios，参数没有序列化/</id>
    <published>2017-10-31T23:22:16.000Z</published>
    <updated>2017-10-31T23:32:20.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>开始用vue写项目，可是用axios进行get操作没问题，进行post操作时，post的值始终没有传过来</p><p>直到搜索到“qs序列化”关键词，才发现其中的缘由</p><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p>Kouss博客 <a href="http://kouss.com/3884.html" target="_blank" rel="external">http://kouss.com/3884.html</a></p><h4 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h4><p>设置了headers中Content-Type为application/x-www-form-urlencoded数据格式，post发起的请求仍为json类型，并没有序列化。<br>郁闷的是用JSON.stringify无效。</p><p><img src="http://s.kouss.com/wp-content/uploads/2017/01/f413b81288.png"></p><p>这个Form Data后台取不到数据，正常的Form Data数据应该是key：val<br>最终解决方法：使用qs</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">var qs = require(&apos;qs&apos;)</div><div class="line">Vue.prototype.$http = axios.create(&#123;</div><div class="line">    baseURL: &apos;http://chaozhi.hk&apos;,</div><div class="line">    timeout: 10000,</div><div class="line">    headers: &#123;&apos;Content-Type&apos;: &apos;application/x-www-form-urlencoded&apos;&#125;,</div><div class="line">    transformRequest: [function (data) &#123;</div><div class="line">        data = qs.stringify(data)</div><div class="line">        return data</div><div class="line">    &#125;]</div><div class="line">&#125;)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h4&gt;&lt;p&gt;开始用vue写项目，可是用axios进行get操作没问题，进行post操作时，post的值始终没有传过来&lt;/p&gt;
&lt;p&gt;直到搜索到“qs序列
      
    
    </summary>
    
    
      <category term="vue" scheme="http://www.jk-kj.com/tags/vue/"/>
    
      <category term="axios" scheme="http://www.jk-kj.com/tags/axios/"/>
    
  </entry>
  
  <entry>
    <title>vue选项生命周期钩子</title>
    <link href="http://www.jk-kj.com/2017/10/27/vue%E9%80%89%E9%A1%B9%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%92%A9%E5%AD%90/"/>
    <id>http://www.jk-kj.com/2017/10/27/vue选项生命周期钩子/</id>
    <published>2017-10-27T05:45:00.000Z</published>
    <updated>2017-11-05T09:16:12.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="生命周期钩子"><a href="#生命周期钩子" class="headerlink" title="生命周期钩子"></a>生命周期钩子</h3><p>所有的生命周期钩子自动绑定 this 上下文到实例中，因此你可以访问数据，对属性和方法进行运算。这意味着 你不能使用箭头函数来定义一个生命周期方法 (例如 created: () =&gt; this.fetchTodos())。这是因为箭头函数绑定了父上下文，因此 this 与你期待的 Vue 实例不同，this.fetchTodos 的行为未定义。<br><img src="https://cn.vuejs.org/images/lifecycle.png"></p><h4 id="beforeCreate"><a href="#beforeCreate" class="headerlink" title="beforeCreate"></a>beforeCreate</h4><pre><code>类型：Function</code></pre><p>在实例初始化之后，数据观测 (data observer) 和 event/watcher 事件配置之前被调用。</p><h4 id="created"><a href="#created" class="headerlink" title="created"></a>created</h4><p>类型：Function</p><p>在实例创建完成后被立即调用。在这一步，实例已完成以下的配置：数据观测 (data observer)，属性和方法的运算，watch/event 事件回调。然而，挂载阶段还没开始，$el 属性目前不可见。</p><h4 id="beforeMount"><a href="#beforeMount" class="headerlink" title="beforeMount"></a>beforeMount</h4><p>类型：Function</p><p>详细：</p><p>在挂载开始之前被调用：相关的 render 函数首次被调用。<br>该钩子在服务器端渲染期间不被调用。</p><h4 id="mounted"><a href="#mounted" class="headerlink" title="mounted"></a>mounted</h4><p>类型：Function</p><p>详细：</p><p>el 被新创建的 vm.$el 替换，并挂载到实例上去之后调用该钩子。如果 root 实例挂载了一个文档内元素，当 mounted 被调用时 vm.$el 也在文档内。</p><p>注意 mounted 不会承诺所有的子组件也都一起被挂载。如果你希望等到整个视图都渲染完毕，可以用 vm.$nextTick 替换掉 mounted：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mounted: function () &#123;</div><div class="line">      this.$nextTick(function () &#123;</div><div class="line">        // Code that will run only after the</div><div class="line">        // entire view has been rendered</div><div class="line">      &#125;)</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p><p>该钩子在服务器端渲染期间不被调用。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">mounted () &#123;</div><div class="line">    this.$nextTick(() =&gt; &#123;</div><div class="line">        var dataComeinBar = echarts.init(document.getElementById(&apos;data_comein_bar&apos;));</div><div class="line"></div><div class="line">        var option = &#123;</div><div class="line">            ......</div><div class="line">        &#125;;</div><div class="line"></div><div class="line">        dataComeinBar.setOption(option);</div><div class="line">        window.addEventListener(&apos;resize&apos;, function () &#123;</div><div class="line">            dataComeinBar.resize();</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h4 id="beforeUpdate"><a href="#beforeUpdate" class="headerlink" title="beforeUpdate"></a>beforeUpdate</h4><p>类型：Function</p><p>详细：</p><p>数据更新时调用，发生在虚拟 DOM 重新渲染和打补丁之前。</p><p>你可以在这个钩子中进一步地更改状态，这不会触发附加的重渲染过程。</p><p>该钩子在服务器端渲染期间不被调用。</p><h4 id="updated"><a href="#updated" class="headerlink" title="updated"></a>updated</h4><p>类型：Function</p><p>详细：</p><p>由于数据更改导致的虚拟 DOM 重新渲染和打补丁，在这之后会调用该钩子。</p><p>当这个钩子被调用时，组件 DOM 已经更新，所以你现在可以执行依赖于 DOM 的操作。然而在大多数情况下，你应该避免在此期间更改状态。如果要相应状态改变，通常最好使用计算属性或 watcher 取而代之。</p><p>注意 updated 不会承诺所有的子组件也都一起被重绘。如果你希望等到整个视图都重绘完毕，可以用 vm.$nextTick 替换掉 updated：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">updated: function () &#123;</div><div class="line">  this.$nextTick(function () &#123;</div><div class="line">    // Code that will run only after the</div><div class="line">    // entire view has been re-rendered</div><div class="line">  &#125;)</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>该钩子在服务器端渲染期间不被调用。</p><h4 id="activated"><a href="#activated" class="headerlink" title="activated"></a>activated</h4><p>类型：Function</p><p>详细：</p><p>keep-alive 组件激活时调用。</p><p>该钩子在服务器端渲染期间不被调用。</p><h4 id="deactivated"><a href="#deactivated" class="headerlink" title="deactivated"></a>deactivated</h4><p>类型：Function</p><p>详细：</p><p>keep-alive 组件停用时调用。</p><p>该钩子在服务器端渲染期间不被调用。</p><h4 id="beforeDestroy"><a href="#beforeDestroy" class="headerlink" title="beforeDestroy"></a>beforeDestroy</h4><p>类型：Function</p><p>详细：</p><p>实例销毁之前调用。在这一步，实例仍然完全可用。</p><p>该钩子在服务器端渲染期间不被调用。</p><h4 id="destroyed"><a href="#destroyed" class="headerlink" title="destroyed"></a>destroyed</h4><p>类型：Function</p><p>详细：</p><p>Vue 实例销毁后调用。调用后，Vue 实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁。</p><p>该钩子在服务器端渲染期间不被调用。</p><h4 id="errorCaptured"><a href="#errorCaptured" class="headerlink" title="errorCaptured"></a>errorCaptured</h4><p>2.5.0+ 新增</p><p>类型：(err: Error, vm: Component, info: string) =&gt; ?boolean</p><p>详细：</p><p>当捕获一个来自子孙组件的错误时被调用。此钩子会收到三个参数：错误对象、发生错误的组件实例以及一个包含错误来源信息的字符串。此钩子可以返回 false 以阻止该错误继续向上传播。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;生命周期钩子&quot;&gt;&lt;a href=&quot;#生命周期钩子&quot; class=&quot;headerlink&quot; title=&quot;生命周期钩子&quot;&gt;&lt;/a&gt;生命周期钩子&lt;/h3&gt;&lt;p&gt;所有的生命周期钩子自动绑定 this 上下文到实例中，因此你可以访问数据，对属性和方法进行运算。这意味着 你
      
    
    </summary>
    
    
      <category term="vue2" scheme="http://www.jk-kj.com/tags/vue2/"/>
    
  </entry>
  
  <entry>
    <title>vue指令</title>
    <link href="http://www.jk-kj.com/2017/10/27/vue%E6%8C%87%E4%BB%A4/"/>
    <id>http://www.jk-kj.com/2017/10/27/vue指令/</id>
    <published>2017-10-27T00:16:58.000Z</published>
    <updated>2017-11-05T09:16:12.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="v-text"><a href="#v-text" class="headerlink" title="v-text"></a>v-text</h4><p>预期：string</p><p>更新元素的 textContent。如果要更新部分的 textContent ，需要使用  插值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;span v-text=&quot;msg&quot;&gt;&lt;/span&gt;</div><div class="line">&lt;!-- 和下面的一样 --&gt;</div><div class="line">&lt;span&gt;&#123;&#123;msg&#125;&#125;&lt;/span&gt;</div></pre></td></tr></table></figure><h4 id="v-html"><a href="#v-html" class="headerlink" title="v-html"></a>v-html</h4><p>预期：string</p><p>更新元素的 innerHTML 。注意：内容按普通 HTML 插入 - 不会作为 Vue 模板进行编译 。如果试图使用 v-html 组合模板，可以重新考虑是否通过使用组件来替代。</p><p>在网站上动态渲染任意 HTML 是非常危险的，因为容易导致 XSS 攻击。只在可信内容上使用 v-html，永不用在用户提交的内容上。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;div v-html=&quot;html&quot;&gt;&lt;/div&gt;</div></pre></td></tr></table></figure><h4 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a>v-show</h4><p>预期：any</p><p>不同的是带有 v-show 的元素始终会被渲染并保留在 DOM 中。v-show 只是简单地切换元素的 CSS 属性 display。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;h1 v-show=&quot;ok&quot;&gt;Hello!&lt;/h1&gt;</div></pre></td></tr></table></figure></p><h4 id="v-if"><a href="#v-if" class="headerlink" title="v-if"></a>v-if</h4><p>预期：any</p><h4 id="v-else"><a href="#v-else" class="headerlink" title="v-else"></a>v-else</h4><h4 id="v-else-if"><a href="#v-else-if" class="headerlink" title="v-else-if"></a>v-else-if</h4><p>预期：any</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;div v-if=&quot;Math.random() &gt; 0.5&quot;&gt;</div><div class="line">  Now you see me</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;div v-else&gt;</div><div class="line">  Now you don&apos;t</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;div v-if=&quot;type === &apos;A&apos;&quot;&gt;</div><div class="line">  A</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;div v-else-if=&quot;type === &apos;B&apos;&quot;&gt;</div><div class="line">  B</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;div v-else-if=&quot;type === &apos;C&apos;&quot;&gt;</div><div class="line">  C</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;div v-else&gt;</div><div class="line">  Not A/B/C</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure><h4 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h4><p>预期：Array | Object | number | string</p><p>基于源数据多次渲染元素或模板块。此指令之值，必须使用特定语法 alias in expression ，为当前遍历的元素提供别名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;div v-for=&quot;item in items&quot;&gt;</div><div class="line">  &#123;&#123; item.text &#125;&#125;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure><p>另外也可以为数组索引指定别名 (或者用于对象的键)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;div v-for=&quot;(item, index) in items&quot;&gt;&lt;/div&gt;</div><div class="line">&lt;div v-for=&quot;(val, key) in object&quot;&gt;&lt;/div&gt;</div><div class="line">&lt;div v-for=&quot;(val, key, index) in object&quot;&gt;&lt;/div&gt;</div></pre></td></tr></table></figure><h4 id="v-on"><a href="#v-on" class="headerlink" title="v-on"></a>v-on</h4><p>缩写：@    【注意可缩写】</p><p>修饰符：</p><pre><code>.stop - 调用 event.stopPropagation()。.prevent - 调用 event.preventDefault()。.capture - 添加事件侦听器时使用 capture 模式。.self - 只当事件是从侦听器绑定的元素本身触发时才触发回调。.{keyCode | keyAlias} - 只当事件是从特定键触发时才触发回调。.native - 监听组件根元素的原生事件。.once - 只触发一次回调。.left - (2.2.0) 只当点击鼠标左键时触发。.right - (2.2.0) 只当点击鼠标右键时触发。.middle - (2.2.0) 只当点击鼠标中键时触发。.passive - (2.3.0) 以 { passive: true } 模式添加侦听器</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 方法处理器 --&gt;</div><div class="line">&lt;button v-on:click=&quot;doThis&quot;&gt;&lt;/button&gt;</div><div class="line">&lt;!-- 对象语法 (2.4.0+) --&gt;</div><div class="line">&lt;button v-on=&quot;&#123; mousedown: doThis, mouseup: doThat &#125;&quot;&gt;&lt;/button&gt;</div><div class="line">&lt;!-- 内联语句 --&gt;</div><div class="line">&lt;button v-on:click=&quot;doThat(&apos;hello&apos;, $event)&quot;&gt;&lt;/button&gt;</div><div class="line">&lt;!-- 缩写 --&gt;</div><div class="line">&lt;button @click=&quot;doThis&quot;&gt;&lt;/button&gt;</div><div class="line">&lt;!-- 停止冒泡 --&gt;</div><div class="line">&lt;button @click.stop=&quot;doThis&quot;&gt;&lt;/button&gt;</div><div class="line">&lt;!-- 阻止默认行为 --&gt;</div><div class="line">&lt;button @click.prevent=&quot;doThis&quot;&gt;&lt;/button&gt;</div><div class="line">&lt;!-- 阻止默认行为，没有表达式 --&gt;</div><div class="line">&lt;form @submit.prevent&gt;&lt;/form&gt;</div><div class="line">&lt;!--  串联修饰符 --&gt;</div><div class="line">&lt;button @click.stop.prevent=&quot;doThis&quot;&gt;&lt;/button&gt;</div><div class="line">&lt;!-- 键修饰符，键别名 --&gt;</div><div class="line">&lt;input @keyup.enter=&quot;onEnter&quot;&gt;</div><div class="line">&lt;!-- 键修饰符，键代码 --&gt;</div><div class="line">&lt;input @keyup.13=&quot;onEnter&quot;&gt;</div><div class="line">&lt;!-- 点击回调只会触发一次 --&gt;</div><div class="line">&lt;button v-on:click.once=&quot;doThis&quot;&gt;&lt;/button&gt;</div></pre></td></tr></table></figure><p>在子组件上监听自定义事件 (当子组件触发“my-event”时将调用事件处理器)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;my-component @my-event=&quot;handleThis&quot;&gt;&lt;/my-component&gt;</div><div class="line">&lt;!-- 内联语句 --&gt;</div><div class="line">&lt;my-component @my-event=&quot;handleThis(123, $event)&quot;&gt;&lt;/my-component&gt;</div><div class="line">&lt;!-- 组件中的原生事件 --&gt;</div><div class="line">&lt;my-component @click.native=&quot;onClick&quot;&gt;&lt;/my-component&gt;</div></pre></td></tr></table></figure><h4 id="v-bind"><a href="#v-bind" class="headerlink" title="v-bind"></a>v-bind</h4><p>缩写：:    【注意可缩写】<br>预期：any (with argument) | Object (without argument)</p><p>修饰符：</p><pre><code>.prop - 被用于绑定 DOM 属性 (property)。(差别在哪里？).camel - (2.1.0+) 将 kebab-case 特性名转换为 camelCase. (从 2.1.0 开始支持).sync (2.3.0+) 语法糖，会扩展成一个更新父组件绑定值的 v-on 侦听器。</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 绑定一个属性 --&gt;</div><div class="line">&lt;img v-bind:src=&quot;imageSrc&quot;&gt;</div><div class="line">&lt;!-- 缩写 --&gt;</div><div class="line">&lt;img :src=&quot;imageSrc&quot;&gt;</div><div class="line">&lt;!-- 内联字符串拼接 --&gt;</div><div class="line">&lt;img :src=&quot;&apos;/path/to/images/&apos; + fileName&quot;&gt;</div><div class="line">&lt;!-- class 绑定 --&gt;</div><div class="line">&lt;div :class=&quot;&#123; red: isRed &#125;&quot;&gt;&lt;/div&gt;</div><div class="line">&lt;div :class=&quot;[classA, classB]&quot;&gt;&lt;/div&gt;</div><div class="line">&lt;div :class=&quot;[classA, &#123; classB: isB, classC: isC &#125;]&quot;&gt;</div><div class="line">&lt;!-- style 绑定 --&gt;</div><div class="line">&lt;div :style=&quot;&#123; fontSize: size + &apos;px&apos; &#125;&quot;&gt;&lt;/div&gt;</div><div class="line">&lt;div :style=&quot;[styleObjectA, styleObjectB]&quot;&gt;&lt;/div&gt;</div><div class="line">&lt;!-- 绑定一个有属性的对象 --&gt;</div><div class="line">&lt;div v-bind=&quot;&#123; id: someProp, &apos;other-attr&apos;: otherProp &#125;&quot;&gt;&lt;/div&gt;</div><div class="line">&lt;!-- 通过 prop 修饰符绑定 DOM 属性 --&gt;</div><div class="line">&lt;div v-bind:text-content.prop=&quot;text&quot;&gt;&lt;/div&gt;</div><div class="line">&lt;!-- prop 绑定。“prop”必须在 my-component 中声明。--&gt;</div><div class="line">&lt;my-component :prop=&quot;someThing&quot;&gt;&lt;/my-component&gt;</div><div class="line">&lt;!-- 通过 $props 将父组件的 props 一起传给子组件 --&gt;</div><div class="line">&lt;child-component v-bind=&quot;$props&quot;&gt;&lt;/child-component&gt;</div><div class="line">&lt;!-- XLink --&gt;</div><div class="line">&lt;svg&gt;&lt;a :xlink:special=&quot;foo&quot;&gt;&lt;/a&gt;&lt;/svg&gt;</div></pre></td></tr></table></figure><h4 id="v-model"><a href="#v-model" class="headerlink" title="v-model"></a>v-model</h4><p>预期：随表单控件类型不同而不同。</p><p>限制：</p><pre><code>&lt;input&gt;&lt;select&gt;&lt;textarea&gt;components</code></pre><p>修饰符：</p><pre><code>.lazy - 取代 input 监听 change 事件.number - 输入字符串转为数字.trim - 输入首尾空格过滤</code></pre><h4 id="v-pre"><a href="#v-pre" class="headerlink" title="v-pre"></a>v-pre</h4><p>用法：</p><p>跳过这个元素和它的子元素的编译过程。可以用来显示原始 Mustache 标签。跳过大量没有指令的节点会加快编译。</p><p>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;span v-pre&gt;&#123;&#123; this will not be compiled &#125;&#125;&lt;/span&gt;</div></pre></td></tr></table></figure></p><h4 id="v-cloak"><a href="#v-cloak" class="headerlink" title="v-cloak"></a>v-cloak</h4><p>用法：</p><p>这个指令保持在元素上直到关联实例结束编译。和 CSS 规则如 [v-cloak] { display: none } 一起用时，这个指令可以隐藏未编译的 Mustache 标签直到实例准备完毕。</p><p>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[v-cloak] &#123;</div><div class="line">  display: none;</div><div class="line">&#125;</div><div class="line"></div><div class="line">&lt;div v-cloak&gt;</div><div class="line">  &#123;&#123; message &#125;&#125;</div><div class="line">&lt;/div&gt;</div><div class="line"></div><div class="line">不会显示，直到编译结束。</div></pre></td></tr></table></figure></p><h4 id="v-once"><a href="#v-once" class="headerlink" title="v-once"></a>v-once</h4><p>只渲染元素和组件一次。随后的重新渲染，元素/组件及其所有的子节点将被视为静态内容并跳过。这可以用于优化更新性能。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 单个元素 --&gt;</div><div class="line">&lt;span v-once&gt;This will never change: &#123;&#123;msg&#125;&#125;&lt;/span&gt;</div><div class="line">&lt;!-- 有子元素 --&gt;</div><div class="line">&lt;div v-once&gt;</div><div class="line">  &lt;h1&gt;comment&lt;/h1&gt;</div><div class="line">  &lt;p&gt;&#123;&#123;msg&#125;&#125;&lt;/p&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;!-- 组件 --&gt;</div><div class="line">&lt;my-component v-once :comment=&quot;msg&quot;&gt;&lt;/my-component&gt;</div><div class="line">&lt;!-- `v-for` 指令--&gt;</div><div class="line">&lt;ul&gt;</div><div class="line">  &lt;li v-for=&quot;i in list&quot; v-once&gt;&#123;&#123;i&#125;&#125;&lt;/li&gt;</div><div class="line">&lt;/ul&gt;</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;v-text&quot;&gt;&lt;a href=&quot;#v-text&quot; class=&quot;headerlink&quot; title=&quot;v-text&quot;&gt;&lt;/a&gt;v-text&lt;/h4&gt;&lt;p&gt;预期：string&lt;/p&gt;
&lt;p&gt;更新元素的 textContent。如果要更新部分的 textConten
      
    
    </summary>
    
    
      <category term="vue2" scheme="http://www.jk-kj.com/tags/vue2/"/>
    
  </entry>
  
  <entry>
    <title>vue选项数据</title>
    <link href="http://www.jk-kj.com/2017/10/27/vue%E9%80%89%E9%A1%B9%E6%95%B0%E6%8D%AE/"/>
    <id>http://www.jk-kj.com/2017/10/27/vue选项数据/</id>
    <published>2017-10-26T22:47:41.000Z</published>
    <updated>2017-11-05T09:16:12.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="data"><a href="#data" class="headerlink" title="data"></a>data</h3><p>初级理解：对象必须是纯粹的对象(含有零个或多个的key/value对)，这里面的数据最好都是在视图层显示的数据（静态变量）<br>中级理解：<br>高级理解：</p><p>其他：<br>如果说不是在视图层展示的变量。可以定义在外面或者放在vm对象上。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">let abc = &apos;&apos;  </div><div class="line">export default &#123;  </div><div class="line">    data() &#123;  </div><div class="line">        return &#123;  </div><div class="line">            bar: &apos;bar&apos;  </div><div class="line">        &#125;  </div><div class="line">    &#125;,  </div><div class="line">    methods: &#123;  </div><div class="line">        testFn() &#123;  </div><div class="line">            // abc  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="props"><a href="#props" class="headerlink" title="props"></a>props</h3><p>初级理解：props 可以是数组或对象，用于接收来自父组件的数据。<br>中级理解：组件实例的作用域是孤立的。这意味着不能 (也不应该) 在子组件的模板内直接引用父组件的数据。父组件的数据需要通过 prop 才能下发到子组件中。<br>高级理解：</p><p>其他：</p><p>子组件要显式地用 props 选项声明它预期的数据：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Vue.component(&apos;child&apos;, &#123;</div><div class="line">  // 声明 props</div><div class="line">  props: [&apos;message&apos;],</div><div class="line">  // 就像 data 一样，prop 也可以在模板中使用</div><div class="line">  // 同样也可以在 vm 实例中通过 this.message 来使用</div><div class="line">  template: &apos;&lt;span&gt;&#123;&#123; message &#125;&#125;&lt;/span&gt;&apos;</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p><p>然后我们可以这样向它传入一个普通字符串：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;child message=&quot;hello!&quot;&gt;&lt;/child&gt;</div></pre></td></tr></table></figure></p><p>结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hello!</div></pre></td></tr></table></figure></p><h3 id="propsData"><a href="#propsData" class="headerlink" title="propsData"></a>propsData</h3><p>简单理解:创建实例时传递 props。主要作用是方便测试。(无父级时)</p><h3 id="computed"><a href="#computed" class="headerlink" title="computed"></a>computed</h3><p>简单理解：computed，计算属性将被混入到 Vue 实例中。所有 getter 和 setter 的 this 上下文自动地绑定为 Vue 实例。不过计算属性也用函数来替代。（动态变量）</p><h3 id="methods"><a href="#methods" class="headerlink" title="methods"></a>methods</h3><p> methods 将被混入到 Vue 实例中。可以直接通过 VM 实例访问这些方法，或者在指令表达式中使用。方法中的 this 自动绑定为 Vue 实例。</p><h3 id="watch"><a href="#watch" class="headerlink" title="watch"></a>watch</h3><p>简单理解：监听data里的值的变化</p><p>官方例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">var vm = new Vue(&#123;</div><div class="line">  data: &#123;</div><div class="line">    a: 1,</div><div class="line">    b: 2,</div><div class="line">    c: 3,</div><div class="line">    d: 4</div><div class="line">  &#125;,</div><div class="line">  watch: &#123;</div><div class="line">    a: function (val, oldVal) &#123;</div><div class="line">      console.log(&apos;new: %s, old: %s&apos;, val, oldVal)</div><div class="line">    &#125;,</div><div class="line">    // 方法名</div><div class="line">    b: &apos;someMethod&apos;,</div><div class="line">    // 深度 watcher</div><div class="line">    c: &#123;</div><div class="line">      handler: function (val, oldVal) &#123; /* ... */ &#125;,</div><div class="line">      deep: true</div><div class="line">    &#125;,</div><div class="line">    // 该回调将会在侦听开始之后被立即调用</div><div class="line">    d: &#123;</div><div class="line">      handler: function (val, oldVal) &#123; /* ... */ &#125;,</div><div class="line">      immediate: true</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;)</div><div class="line">vm.a = 2 // =&gt; new: 2, old: 1</div></pre></td></tr></table></figure><p>一个时间选择器更改的例子<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">var v_assetManage_controller = new Vue(&#123;  </div><div class="line">    el: &apos;.LSee-index&apos;,  </div><div class="line">    data: &#123;  </div><div class="line">        trendQueryTimeCtr: &#123;  </div><div class="line">            startTime: &apos;&apos;,  </div><div class="line">            endTime: &apos;&apos;  </div><div class="line">        &#125;  </div><div class="line">    &#125;,  </div><div class="line">    ready: function() &#123;  </div><div class="line">        //  </div><div class="line">    &#125;,  </div><div class="line">    methods: &#123;  </div><div class="line">        queryTrendData: function()&#123;  </div><div class="line">            //do some here  </div><div class="line">        &#125;  </div><div class="line">    &#125;,  </div><div class="line">    watch: &#123;  </div><div class="line">        &apos;trendQueryTimeCtr.startTime&apos;: &apos;queryTrendData&apos;,  </div><div class="line">        &apos;trendQueryTimeCtr.endTime&apos;: &apos;queryTrendData&apos;  </div><div class="line">    &#125;  </div><div class="line">  </div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;data&quot;&gt;&lt;a href=&quot;#data&quot; class=&quot;headerlink&quot; title=&quot;data&quot;&gt;&lt;/a&gt;data&lt;/h3&gt;&lt;p&gt;初级理解：对象必须是纯粹的对象(含有零个或多个的key/value对)，这里面的数据最好都是在视图层显示的数据（静态变量）&lt;
      
    
    </summary>
    
    
      <category term="vue2" scheme="http://www.jk-kj.com/tags/vue2/"/>
    
  </entry>
  
  <entry>
    <title>ab性能测试</title>
    <link href="http://www.jk-kj.com/2017/10/25/ab%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    <id>http://www.jk-kj.com/2017/10/25/ab性能测试/</id>
    <published>2017-10-25T07:19:00.000Z</published>
    <updated>2017-10-25T23:08:31.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>早先在CPK项目时，因为有用户反应页面打不开，后来采用了CDN和静态页，那段时间也用ab测试工具测试过速度,但用了之后就没深入了解（主要是没写笔记做记录，忘记了）<br>之后因为离职去应聘时，一个面试官问过ab测试，且对我当时的一个开源项目进行了简单的压力测试。因为采用了pjax，没用静态页，首页的测试并不理想，之后打算着将TP的静态页部分改进下，满足pjax时也能调用。<br>在laravel，TP5，YII2等框架性能据说都有不错的提升时，自己用TP3.2开源的项目就显得十分的老旧。如何对比速度上的差异，也就只能先记录下TP3.2时的速度，用新框架的速度来进行对比。</p><h3 id="参考地址"><a href="#参考地址" class="headerlink" title="参考地址"></a>参考地址</h3><p>作者：橙子酱<br>链接：<a href="http://www.jianshu.com/p/43d04d8baaf7" target="_blank" rel="external">http://www.jianshu.com/p/43d04d8baaf7</a><br>來源：简书</p><h3 id="关于压力测试的概念"><a href="#关于压力测试的概念" class="headerlink" title="关于压力测试的概念"></a>关于压力测试的概念</h3><h4 id="吞吐率（Requests-per-second）"><a href="#吞吐率（Requests-per-second）" class="headerlink" title="吞吐率（Requests per second）"></a>吞吐率（Requests per second）</h4><p>概念：服务器并发处理能力的量化描述，单位是reqs/s，指的是某个并发用户数下单位时间内处理的请求数。某个并发用户数下单位时间内能处理的最大请求数，称之为最大吞吐率。<br>计算公式：总请求数 / 处理完成这些请求数所花费的时间，即<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Request per second = Complete requests / Time taken for tests</div></pre></td></tr></table></figure></p><p>以100并发 100次请求，各大网站的对比(20171025)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">百度(www.baidu.com)   80~88</div><div class="line">知乎(www.zhihu.com)   75~85</div><div class="line">QQ(www.qq.com)        25~35</div><div class="line">微博（www.weibo.com） 20~25</div></pre></td></tr></table></figure></p><h4 id="并发连接数（The-number-of-concurrent-connections）"><a href="#并发连接数（The-number-of-concurrent-connections）" class="headerlink" title="并发连接数（The number of concurrent connections）"></a>并发连接数（The number of concurrent connections）</h4><p>概念：某个时刻服务器所接受的请求数目，简单的讲，就是一个会话。</p><h4 id="并发用户数（The-number-of-concurrent-users，Concurrency-Level）"><a href="#并发用户数（The-number-of-concurrent-users，Concurrency-Level）" class="headerlink" title="并发用户数（The number of concurrent users，Concurrency Level）"></a>并发用户数（The number of concurrent users，Concurrency Level）</h4><p>概念：要注意区分这个概念和并发连接数之间的区别，一个用户可能同时会产生多个会话，也即连接数。</p><h4 id="用户平均请求等待时间（Time-per-request）"><a href="#用户平均请求等待时间（Time-per-request）" class="headerlink" title="用户平均请求等待时间（Time per request）"></a>用户平均请求等待时间（Time per request）</h4><p>计算公式：处理完成所有请求数所花费的时间/ （总请求数 / 并发用户数），即<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Time per request = Time taken for tests /（ Complete requests / Concurrency Level）</div></pre></td></tr></table></figure></p><h4 id="服务器平均请求等待时间（Time-per-request-across-all-concurrent-requests）"><a href="#服务器平均请求等待时间（Time-per-request-across-all-concurrent-requests）" class="headerlink" title="服务器平均请求等待时间（Time per request: across all concurrent requests）"></a>服务器平均请求等待时间（Time per request: across all concurrent requests）</h4><p>计算公式：处理完成所有请求数所花费的时间 / 总请求数，即<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Time taken for / testsComplete requests</div></pre></td></tr></table></figure></p><p>可以看到，它是吞吐率的倒数。<br>同时，它也 等于 用户平均请求等待时间/并发用户数，即<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Time per request / Concurrency Level</div></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">百度(www.baidu.com)   1100~1300  11.00~13.00</div><div class="line">知乎(www.zhihu.com)   1100~1300  11.00~13.00</div><div class="line">QQ(www.qq.com)        3200~3500  32.00~35.00</div><div class="line">微博（www.weibo.com）  4000~5000  40.00~50.00</div></pre></td></tr></table></figure><hr><h3 id="单次测试结果的说明"><a href="#单次测试结果的说明" class="headerlink" title="单次测试结果的说明"></a>单次测试结果的说明</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">Concurrency Level: 100                 //并发请求数</div><div class="line">Time taken for tests: 50.872 seconds   //整个测试持续的时间</div><div class="line">Complete requests: 1000                //完成的请求数</div><div class="line">Failed requests: 0                     //失败的请求数</div><div class="line"></div><div class="line">Total transferred: 13701482 bytes      //整个场景中的网络传输量</div><div class="line">HTML transferred: 13197000 bytes       //整个场景中的HTML内容传输量</div><div class="line"></div><div class="line">Requests per second: 19.66 [#/sec] (mean)   //吞吐率，大家最关心的指标之一，相当于 LR 中的每秒事务数，后面括号中的 mean 表示这是一个平均值</div><div class="line">Time per request: 5087.180 [ms] (mean)      //用户平均请求等待时间，大家最关心的指标之二，相当于 LR 中的平均事务响应时间，后面括号中的 mean 表示这是一个平均值</div><div class="line">Time per request: 50.872 [ms] (mean, across all concurrent requests)   //服务器平均请求处理时间，大家最关心的指标之三</div><div class="line"></div><div class="line">Transfer rate: 263.02 [Kbytes/sec] received   //平均每秒网络上的流量，可以帮助排除是否存在网络流量过大导致响应时间延长的问题</div></pre></td></tr></table></figure><h3 id="关于登录的问题"><a href="#关于登录的问题" class="headerlink" title="关于登录的问题"></a>关于登录的问题</h3><p>有时候进行压力测试需要用户登录，怎么办？<br>请参考以下步骤：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">先用账户和密码登录后，用开发者工具找到标识这个会话的Cookie值（Session ID）记下来</div></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">如果只用到一个Cookie，那么只需键入命令：</div><div class="line">ab －n 100 －C key＝value http://test.com/</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">如果需要多个Cookie，就直接设Header：</div><div class="line">ab -n 100 -H “Cookie: Key1=Value1; Key2=Value2” http://test.com/</div></pre></td></tr></table></figure><h3 id="如何防止别人用ab之类的测试软件恶意请求自己的网站"><a href="#如何防止别人用ab之类的测试软件恶意请求自己的网站" class="headerlink" title="如何防止别人用ab之类的测试软件恶意请求自己的网站"></a>如何防止别人用ab之类的测试软件恶意请求自己的网站</h3><p>网友回答：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">目前此类软件可以很真实的模拟浏览器请求，所以在少量的请求下，基本上是屏蔽不了的。</div><div class="line">但是，使用此类软件请求你的网站通常都有其他目的，会产生大量重复的请求。</div><div class="line">可以通过单位时间的请求次数进行控制，相同IP或者相同的userAgint产生的异常请求通过程序判断来禁止。</div><div class="line">但是即便程序做了判断，请求已经进入处理阶段依然会影响性能，所以还要配合其他的处理方式，重复响应最好用缓存的方式来实现，避免过多的消耗CPU；确诊的问题IP应该在防火墙端就进行屏蔽。</div></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">nginx的话可以用HttpLimitReqModule</div><div class="line">此模块能通过特定的客户端标识（如IP，UA等）来限制客户端在一定时间内的访问频次，比你在程序里控制要省资源得多。</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;早先在CPK项目时，因为有用户反应页面打不开，后来采用了CDN和静态页，那段时间也用ab测试工具测试过速度,但用了之后就没深入了解（主要是没
      
    
    </summary>
    
    
      <category term="测试" scheme="http://www.jk-kj.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>sublime 配置代理</title>
    <link href="http://www.jk-kj.com/2017/10/24/sublime-%E9%85%8D%E7%BD%AE%E4%BB%A3%E7%90%86/"/>
    <id>http://www.jk-kj.com/2017/10/24/sublime-配置代理/</id>
    <published>2017-10-24T01:45:10.000Z</published>
    <updated>2017-10-24T22:56:19.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>今天安装sublime插件时居然出现了，无法连接的错误<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Package Control: Attempting to use Urllib downloader due to WinINet error: Error downloading channel. Connection refused (errno 12029) during HTTP write phase of downloading https://packagecontrol.io/channel_v3.json.</div><div class="line">Package Control: Error downloading channel. URL error [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。 downloading https://packagecontrol.io/channel_v3.json.</div></pre></td></tr></table></figure></p><p>查了一下，需要配置代理（前段时间都可以用的，今天就被墙了？好吧，我配置代理）</p><h4 id="配置代理"><a href="#配置代理" class="headerlink" title="配置代理"></a>配置代理</h4><p>打开 `Preferences &gt; Package Settings &gt; Package Control &gt; Settings - User 菜单``</p><p>添加两行:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&quot;http_proxy&quot;: &quot;http://127.0.0.1:1080&quot;,</div><div class="line">&quot;https_proxy&quot;: &quot;http://127.0.0.1:1080&quot;</div></pre></td></tr></table></figure></p><p>127.0.0.1:1080为我本地的Shadowsocks代理地址</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h4&gt;&lt;p&gt;今天安装sublime插件时居然出现了，无法连接的错误&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;
      
    
    </summary>
    
    
      <category term="代理" scheme="http://www.jk-kj.com/tags/%E4%BB%A3%E7%90%86/"/>
    
      <category term="sublime" scheme="http://www.jk-kj.com/tags/sublime/"/>
    
  </entry>
  
  <entry>
    <title>mysql中的视图（转）</title>
    <link href="http://www.jk-kj.com/2017/10/24/mysql%E4%B8%AD%E7%9A%84%E8%A7%86%E5%9B%BE%EF%BC%88%E8%BD%AC%EF%BC%89/"/>
    <id>http://www.jk-kj.com/2017/10/24/mysql中的视图（转）/</id>
    <published>2017-10-24T01:22:05.000Z</published>
    <updated>2017-10-24T22:56:19.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>上一个项目接手后，在转移数据庫的时候，数据庫的转移失败，那是我第一次接触mysql视图。但是那时没去研究啥是视图。</p><p>今天查看另一个项目时，又发现了mysql视图的存在，需要充电一下了！</p><h4 id="文章来源"><a href="#文章来源" class="headerlink" title="文章来源"></a>文章来源</h4><p>作者：风一样的码农<br>原文地址：<a href="http://www.cnblogs.com/chenpi/p/5133648.html" target="_blank" rel="external">http://www.cnblogs.com/chenpi/p/5133648.html</a></p><h4 id="什么是视图"><a href="#什么是视图" class="headerlink" title="什么是视图"></a>什么是视图</h4><p>通俗的讲，视图就是一条SELECT语句执行后返回的结果集。所以我们在创建视图的时候，主要的工作就落在创建这条SQL查询语句上。</p><h4 id="视图的特性"><a href="#视图的特性" class="headerlink" title="视图的特性"></a>视图的特性</h4><p>视图是对若干张基本表的引用，一张虚表，查询语句执行的结果，不存储具体的数据（基本表数据发生了改变，视图也会跟着改变）；</p><p>可以跟基本表一样，进行增删改查操作(ps:增删改操作有条件限制)；</p><h4 id="视图的作用"><a href="#视图的作用" class="headerlink" title="视图的作用"></a>视图的作用</h4><p>方便操作，特别是查询操作，减少复杂的SQL语句，增强可读性；</p><p>更加安全，数据库授权命令不能限定到特定行和特定列，但是通过合理创建视图，可以把权限限定到行列级别；</p><h4 id="使用场合"><a href="#使用场合" class="headerlink" title="使用场合"></a>使用场合</h4><p>权限控制的时候，不希望用户访问表中某些含敏感信息的列，比如salary…</p><p>关键信息来源于多个复杂关联表，可以创建视图提取我们需要的信息，简化操作；</p><h4 id="视图实例1-创建视图及查询数据操作"><a href="#视图实例1-创建视图及查询数据操作" class="headerlink" title="视图实例1-创建视图及查询数据操作"></a>视图实例1-创建视图及查询数据操作</h4><p>现有三张表：用户(user)、课程(course)、用户课程中间表(user_course)，表结构及数据如下：</p><p>表定义：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Table structure for `course`</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`course`</span>;</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`course`</span> (</div><div class="line">  <span class="string">`id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</div><div class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">200</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`description`</span> <span class="built_in">varchar</span>(<span class="number">500</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</div><div class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">4</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</div><div class="line"></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Records of course</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`course`</span> <span class="keyword">VALUES</span> (<span class="string">'1'</span>, <span class="string">'JAVA'</span>, <span class="string">'JAVA课程'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`course`</span> <span class="keyword">VALUES</span> (<span class="string">'2'</span>, <span class="string">'C++'</span>, <span class="string">'C++课程'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`course`</span> <span class="keyword">VALUES</span> (<span class="string">'3'</span>, <span class="string">'C语言'</span>, <span class="string">'C语言课程'</span>);</div><div class="line"></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Table structure for `user`</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`user`</span>;</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`user`</span> (</div><div class="line">  <span class="string">`id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</div><div class="line">  <span class="string">`account`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`address`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`others`</span> <span class="built_in">varchar</span>(<span class="number">200</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`others2`</span> <span class="built_in">varchar</span>(<span class="number">200</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</div><div class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</div><div class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">4</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</div><div class="line"></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Records of user</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span> <span class="keyword">VALUES</span> (<span class="string">'1'</span>, <span class="string">'user1'</span>, <span class="string">'小陈'</span>, <span class="string">'美国'</span>, <span class="string">'1'</span>, <span class="string">'1'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span> <span class="keyword">VALUES</span> (<span class="string">'2'</span>, <span class="string">'user2'</span>, <span class="string">'小张'</span>, <span class="string">'日本'</span>, <span class="string">'2'</span>, <span class="string">'2'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span> <span class="keyword">VALUES</span> (<span class="string">'3'</span>, <span class="string">'user3'</span>, <span class="string">'小王'</span>, <span class="string">'中国'</span>, <span class="string">'3'</span>, <span class="string">'3'</span>);</div><div class="line"></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Table structure for `user_course`</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`user_course`</span>;</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`user_course`</span> (</div><div class="line">  <span class="string">`id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</div><div class="line">  <span class="string">`userid`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`courseid`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</div><div class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">7</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</div><div class="line"></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Records of user_course</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user_course`</span> <span class="keyword">VALUES</span> (<span class="string">'1'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user_course`</span> <span class="keyword">VALUES</span> (<span class="string">'2'</span>, <span class="string">'1'</span>, <span class="string">'3'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user_course`</span> <span class="keyword">VALUES</span> (<span class="string">'3'</span>, <span class="string">'2'</span>, <span class="string">'1'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user_course`</span> <span class="keyword">VALUES</span> (<span class="string">'4'</span>, <span class="string">'2'</span>, <span class="string">'2'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user_course`</span> <span class="keyword">VALUES</span> (<span class="string">'5'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user_course`</span> <span class="keyword">VALUES</span> (<span class="string">'6'</span>, <span class="string">'3'</span>, <span class="string">'2'</span>);</div></pre></td></tr></table></figure></p><p>这时，当我们想要查询小张上的所以课程相关信息的时候，需要这样写一条长长的SQL语句，如下：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line">    <span class="string">`uc`</span>.<span class="string">`id`</span> <span class="keyword">AS</span> <span class="string">`id`</span>,</div><div class="line">    <span class="string">`u`</span>.<span class="string">`name`</span> <span class="keyword">AS</span> <span class="string">`username`</span>,</div><div class="line">    <span class="string">`c`</span>.<span class="string">`name`</span> <span class="keyword">AS</span> <span class="string">`coursename`</span></div><div class="line"><span class="keyword">FROM</span></div><div class="line">    <span class="string">`user`</span> <span class="string">`u`</span></div><div class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> <span class="string">`user_course`</span> <span class="string">`uc`</span> <span class="keyword">ON</span> ((<span class="string">`u`</span>.<span class="string">`id`</span> = <span class="string">`uc`</span>.<span class="string">`userid`</span>))</div><div class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> <span class="string">`course`</span> <span class="string">`c`</span> <span class="keyword">ON</span> ((<span class="string">`uc`</span>.<span class="string">`courseid`</span> = <span class="string">`c`</span>.<span class="string">`id`</span>))</div><div class="line"><span class="keyword">WHERE</span></div><div class="line">    u.<span class="string">`name`</span> = <span class="string">'小张'</span></div></pre></td></tr></table></figure></p><p>但是我们可以通过视图简化操作，例如我们创建视图view_user_course如下：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- View structure for `view_user_course`</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span></div><div class="line"><span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`view_user_course`</span>;</div><div class="line"></div><div class="line"><span class="keyword">CREATE</span> ALGORITHM = UNDEFINED </div><div class="line">DEFINER = <span class="string">`root`</span>@<span class="string">`localhost`</span> </div><div class="line"><span class="keyword">SQL</span> <span class="keyword">SECURITY</span> DEFINER </div><div class="line"><span class="keyword">VIEW</span> <span class="string">`view_user_course`</span> <span class="keyword">AS</span> (</div><div class="line">    <span class="keyword">SELECT</span></div><div class="line">        <span class="string">`uc`</span>.<span class="string">`id`</span> <span class="keyword">AS</span> <span class="string">`id`</span>,</div><div class="line">        <span class="string">`u`</span>.<span class="string">`name`</span> <span class="keyword">AS</span> <span class="string">`username`</span>,</div><div class="line">        <span class="string">`c`</span>.<span class="string">`name`</span> <span class="keyword">AS</span> <span class="string">`coursename`</span></div><div class="line">    <span class="keyword">FROM</span></div><div class="line">        (</div><div class="line">            (</div><div class="line">                <span class="string">`user`</span> <span class="string">`u`</span></div><div class="line">                <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> <span class="string">`user_course`</span> <span class="string">`uc`</span> <span class="keyword">ON</span> ((<span class="string">`u`</span>.<span class="string">`id`</span> = <span class="string">`uc`</span>.<span class="string">`userid`</span>))</div><div class="line">            )</div><div class="line">            <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> <span class="string">`course`</span> <span class="string">`c`</span> <span class="keyword">ON</span> ((<span class="string">`uc`</span>.<span class="string">`courseid`</span> = <span class="string">`c`</span>.<span class="string">`id`</span>))</div><div class="line">        )</div><div class="line">);</div></pre></td></tr></table></figure></p><p>几点说明（MySQL中的视图在标准SQL的基础之上做了扩展）：</p><p>ALGORITHM=UNDEFINED：指定视图的处理算法；</p><p>DEFINER=<code>root</code>@<code>localhost</code>：指定视图创建者；</p><p>SQL SECURITY DEFINER：指定视图查询数据时的安全验证方式；</p><p>创建好视图之后，我们可以直接用以下SQL语句在视图上查询小张上的所以课程相关信息，同样可以得到所需结果：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line">    vuc.username,</div><div class="line">    vuc.coursename</div><div class="line"><span class="keyword">FROM</span></div><div class="line">    view_user_course vuc</div><div class="line"><span class="keyword">WHERE</span></div><div class="line">     vuc.username = <span class="string">'小张'</span></div></pre></td></tr></table></figure></p><h4 id="视图实例2-增删改数据操作"><a href="#视图实例2-增删改数据操作" class="headerlink" title="视图实例2-增删改数据操作"></a>视图实例2-增删改数据操作</h4><p>继续，我们可以尝试在视图view_user_course上做增删改数据操作，如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">update</span> view_user_course <span class="keyword">set</span> username=<span class="string">'test'</span>,coursename=<span class="string">'JAVASCRIPT'</span> <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">3</span></div></pre></td></tr></table></figure><p>遗憾的是操作失败，提示错误信息如下：</p><p>[SQL] update view_user_course set username=’test’,coursename=’JAVASCRIPT’ where id=3</p><p>[Err] 1393 - Can not modify more than one base table through a join view ‘demo.view_user_course’</p><p>因为不能在一张由多张关联表连接而成的视图上做同时修改两张表的操作；</p><p>那么哪些操作可以在视图上进行呢？</p><p>视图与表是一对一关系情况：如果没有其它约束（如视图中没有的字段，在基本表中是必填字段情况），是可以进行增删改数据操作；</p><p>如我们创建用户关键信息视图view_user_keyinfo，如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- View structure for `view_user_keyinfo`</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span></div><div class="line"><span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`view_user_keyinfo`</span>;</div><div class="line"></div><div class="line"><span class="keyword">CREATE</span> ALGORITHM = UNDEFINED DEFINER = <span class="string">`root`</span>@<span class="string">`localhost`</span> <span class="keyword">SQL</span> <span class="keyword">SECURITY</span> DEFINER <span class="keyword">VIEW</span> <span class="string">`view_user_keyinfo`</span> <span class="keyword">AS</span> <span class="keyword">SELECT</span></div><div class="line">    <span class="string">`u`</span>.<span class="string">`id`</span> <span class="keyword">AS</span> <span class="string">`id`</span>,</div><div class="line">    <span class="string">`u`</span>.<span class="string">`account`</span> <span class="keyword">AS</span> <span class="string">`account`</span>,</div><div class="line">    <span class="string">`u`</span>.<span class="string">`name`</span> <span class="keyword">AS</span> <span class="string">`username`</span></div><div class="line"><span class="keyword">FROM</span></div><div class="line">    <span class="string">`user`</span> <span class="string">`u`</span>;</div></pre></td></tr></table></figure><p>进行增删改操作如下，操作成功（注意user表中的其它字段要允许为空，否则操作失败）：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> view_user_keyinfo (<span class="keyword">account</span>, username)</div><div class="line"><span class="keyword">VALUES</span></div><div class="line">    (<span class="string">'test1'</span>, <span class="string">'test1'</span>);</div></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">DELETE</span></div><div class="line"><span class="keyword">FROM</span></div><div class="line">    view_user_keyinfo</div><div class="line"><span class="keyword">WHERE</span></div><div class="line">    username = <span class="string">'test1'</span>;</div></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">UPDATE</span> view_user_keyinfo</div><div class="line"><span class="keyword">SET</span> username = <span class="string">'updateuser'</span></div><div class="line"><span class="keyword">WHERE</span></div><div class="line">    <span class="keyword">id</span> = <span class="number">1</span></div></pre></td></tr></table></figure><p>视图与表是一对多关系情况：如果只修改一张表的数据，且没有其它约束（如视图中没有的字段，在基本表中是必填字段情况），是可以进行改数据操作，如以下语句，操作成功；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">update</span> view_user_course <span class="keyword">set</span> coursename=<span class="string">'JAVA'</span> <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">1</span>;</div><div class="line"><span class="keyword">update</span> view_user_course <span class="keyword">set</span> username=<span class="string">'test2'</span> <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">3</span>;</div></pre></td></tr></table></figure><p>以下操作失败：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">delete</span> <span class="keyword">from</span> view_user_course <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">3</span>;</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> view_user_course(username, coursename) <span class="keyword">VALUES</span>(<span class="string">'2'</span>,<span class="string">'3'</span>);</div></pre></td></tr></table></figure></p><h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4><p>视图中的查询语句性能要调到最优；<br>修改操作时要小心，不经意间你已经修改了基本表里的多条数据；</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h4&gt;&lt;p&gt;上一个项目接手后，在转移数据庫的时候，数据庫的转移失败，那是我第一次接触mysql视图。但是那时没去研究啥是视图。&lt;/p&gt;
&lt;p&gt;今天查看另
      
    
    </summary>
    
    
      <category term="mysql" scheme="http://www.jk-kj.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>安装phphub5</title>
    <link href="http://www.jk-kj.com/2017/10/22/%E5%AE%89%E8%A3%85phphub5/"/>
    <id>http://www.jk-kj.com/2017/10/22/安装phphub5/</id>
    <published>2017-10-22T11:05:19.000Z</published>
    <updated>2017-10-22T11:24:29.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h4><p>Nginx 1.8+<br>PHP 5.6+<br>Mysql 5.7+<br>Redis 3.0+<br>Memcached 1.4+</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/summerblue/phphub5.git</div></pre></td></tr></table></figure><p>安装扩展包依赖<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">composer install</div></pre></td></tr></table></figure></p><p>生成配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp .env.example .env</div></pre></td></tr></table></figure></p><p>编辑env<br>选择数据库<br>数据库迁移<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">php artisan migrate</div><div class="line"></div><div class="line">php artisan db:seed</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;运行环境&quot;&gt;&lt;a href=&quot;#运行环境&quot; class=&quot;headerlink&quot; title=&quot;运行环境&quot;&gt;&lt;/a&gt;运行环境&lt;/h4&gt;&lt;p&gt;Nginx 1.8+&lt;br&gt;PHP 5.6+&lt;br&gt;Mysql 5.7+&lt;br&gt;Redis 3.0+&lt;br&gt;Memcache
      
    
    </summary>
    
    
      <category term="laravel" scheme="http://www.jk-kj.com/tags/laravel/"/>
    
  </entry>
  
  <entry>
    <title>在mac上通过Homebrew安装redis</title>
    <link href="http://www.jk-kj.com/2017/10/22/%E5%9C%A8mac%E4%B8%8A%E9%80%9A%E8%BF%87Homebrew%E5%AE%89%E8%A3%85redis/"/>
    <id>http://www.jk-kj.com/2017/10/22/在mac上通过Homebrew安装redis/</id>
    <published>2017-10-22T06:10:57.000Z</published>
    <updated>2017-10-22T06:19:29.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="安装命令"><a href="#安装命令" class="headerlink" title="安装命令"></a>安装命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install redis</div></pre></td></tr></table></figure><p>安装完成后提示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">To have launchd start redis now and restart at login:</div><div class="line">  brew services start redis</div><div class="line">  Or, if you don&apos;t want/need a background service you can just run:</div><div class="line">    redis-server /usr/local/etc/redis.conf</div><div class="line">    ==&gt; Summary</div><div class="line">    🍺  /usr/local/Cellar/redis/4.0.2: 11 files, 2.7MB, built in 23 seconds</div></pre></td></tr></table></figure></p><p>执行提示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew services start redis</div></pre></td></tr></table></figure></p><p>完成后提示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Cloning into &apos;/usr/local/Homebrew/Library/Taps/homebrew/homebrew-services&apos;...</div><div class="line">remote: Counting objects: 12, done.</div><div class="line">remote: Compressing objects: 100% (8/8), done.</div><div class="line">remote: Total 12 (delta 0), reused 7 (delta 0), pack-reused 0</div><div class="line">Unpacking objects: 100% (12/12), done.</div><div class="line">Checking connectivity... done.</div><div class="line">Tapped 0 formulae (39 files, 53.5KB)</div><div class="line">==&gt; Successfully started `redis` (label: homebrew.mxcl.redis)</div></pre></td></tr></table></figure></p><p>ok~redis 已经启动</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;安装命令&quot;&gt;&lt;a href=&quot;#安装命令&quot; class=&quot;headerlink&quot; title=&quot;安装命令&quot;&gt;&lt;/a&gt;安装命令&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
      
    
    </summary>
    
    
      <category term="mac" scheme="http://www.jk-kj.com/tags/mac/"/>
    
      <category term="redis" scheme="http://www.jk-kj.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>mac下安装python</title>
    <link href="http://www.jk-kj.com/2017/10/07/mac%E4%B8%8B%E5%AE%89%E8%A3%85python/"/>
    <id>http://www.jk-kj.com/2017/10/07/mac下安装python/</id>
    <published>2017-10-07T08:29:03.000Z</published>
    <updated>2017-10-07T09:00:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>知乎上说，不要在mac自带的python里折腾，怕折腾蹦了影响系统</p><p>用brew 安装，且自带pip</p><h3 id="安装python2-amp-python3"><a href="#安装python2-amp-python3" class="headerlink" title="安装python2 &amp; python3"></a>安装python2 &amp; python3</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install python</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install python3</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">This formula installs a python2 executable to /usr/local/bin.</div><div class="line">If you wish to have this formula&apos;s python executable in your PATH then add</div><div class="line">the following to ~/.zshrc:</div><div class="line">  export PATH=&quot;/usr/local/opt/python/libexec/bin:$PATH&quot;</div><div class="line"></div><div class="line">  Pip and setuptools have been installed. To update them</div><div class="line">    pip2 install --upgrade pip setuptools</div><div class="line"></div><div class="line">    You can install Python packages with</div><div class="line">      pip2 install &lt;package&gt;</div><div class="line"></div><div class="line">      They will install into the site-package directory</div><div class="line">        /usr/local/lib/python2.7/site-packages</div><div class="line"></div><div class="line">See: https://docs.brew.sh/Homebrew-and-Python.html</div></pre></td></tr></table></figure><h4 id="设置PATH"><a href="#设置PATH" class="headerlink" title="设置PATH"></a>设置PATH</h4><p>vim ~/.zshrc 加入<br><code>export PATH=&quot;/usr/local/opt/python/libexec/bin:$PATH&quot;</code></p><h4 id="验证PATH设置成功"><a href="#验证PATH设置成功" class="headerlink" title="验证PATH设置成功"></a>验证PATH设置成功</h4><p>输入<code>which python</code><br>如果显示 <code>/usr/local/opt/python/libexec/bin/python</code>则说明成功</p><h4 id="如何使用系统的python"><a href="#如何使用系统的python" class="headerlink" title="如何使用系统的python"></a>如何使用系统的python</h4><p>如果有需要想使用一下系统的Python，输入<code>/usr/bin/python</code>即可</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;知乎上说，不要在mac自带的python里折腾，怕折腾蹦了影响系统&lt;/p&gt;
&lt;p&gt;用brew 安装，且自带pip&lt;/p&gt;
&lt;h3 id=&quot;安装python2-amp-python3&quot;&gt;&lt;a href=&quot;#安装python2-amp-python3&quot; class=&quot;heade
      
    
    </summary>
    
    
      <category term="安装" scheme="http://www.jk-kj.com/tags/%E5%AE%89%E8%A3%85/"/>
    
      <category term="python" scheme="http://www.jk-kj.com/tags/python/"/>
    
      <category term="mac" scheme="http://www.jk-kj.com/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>python之禅</title>
    <link href="http://www.jk-kj.com/2017/10/07/python%E4%B9%8B%E7%A6%85/"/>
    <id>http://www.jk-kj.com/2017/10/07/python之禅/</id>
    <published>2017-10-07T07:12:09.000Z</published>
    <updated>2017-10-07T07:30:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>虽然python不是我的入门语言，之前一直抵触它的缩进语法，但通过《python宝典》的入门学习，发现python成为当前最热门的语言不是偶然。</p><p>python社区和语言一起成长，融合了多种语言的特性及优点。</p><p>刚试着用import this 查看了python之禅</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">The Zen of Python, by Tim Peters</div><div class="line"></div><div class="line">Beautiful is better than ugly.</div><div class="line">Explicit is better than implicit.</div><div class="line">Simple is better than complex.</div><div class="line">Complex is better than complicated.</div><div class="line">Flat is better than nested.</div><div class="line">Sparse is better than dense.</div><div class="line">Readability counts.</div><div class="line">Special cases aren&apos;t special enough to break the rules.</div><div class="line">Although practicality beats purity.</div><div class="line">Errors should never pass silently.</div><div class="line">Unless explicitly silenced.</div><div class="line">In the face of ambiguity, refuse the temptation to guess.</div><div class="line">There should be one-- and preferably only one --obvious way to do it.</div><div class="line">Although that way may not be obvious at first unless you&apos;re Dutch.</div><div class="line">Now is better than never.</div><div class="line">Although never is often better than *right* now.</div><div class="line">If the implementation is hard to explain, it&apos;s a bad idea.</div><div class="line">If the implementation is easy to explain, it may be a good idea.</div><div class="line">Namespaces are one honking great idea -- let&apos;s do more of those!</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">python之禅 by Tim Peters</div><div class="line"> </div><div class="line"> 优美胜于丑陋（Python 以编写优美的代码为目标）</div><div class="line"> 明了胜于晦涩（优美的代码应当是明了的，命名规范，风格相似）</div><div class="line"> 简洁胜于复杂（优美的代码应当是简洁的，不要有复杂的内部实现）</div><div class="line"> 复杂胜于凌乱（如果复杂不可避免，那代码间也不能有难懂的关系，要保持接口简洁）</div><div class="line"> 扁平胜于嵌套（优美的代码应当是扁平的，不能有太多的嵌套）</div><div class="line"> 间隔胜于紧凑（优美的代码有适当的间隔，不要奢望一行代码解决问题）</div><div class="line"> 可读性很重要（优美的代码是可读的）</div><div class="line"> 即便假借特例的实用性之名，也不可违背这些规则（这些规则至高无上）</div><div class="line">  </div><div class="line">不要包容所有错误，除非你确定需要这样做（精准地捕获异常，不写 except:pass 风格的代码）</div><div class="line">   </div><div class="line">当存在多种可能，不要尝试去猜测</div><div class="line"></div><div class="line">而是尽量找一种，最好是唯一一种明显的解决方案（如果不确定，就用穷举法）</div><div class="line"></div><div class="line">虽然这并不容易，因为你不是 Python 之父（这里的 Dutch 是指 Guido ）</div><div class="line">    </div><div class="line">做也许好过不做，但不假思索就动手还不如不做（动手之前要细思量）</div><div class="line">     </div><div class="line">如果你无法向人描述你的方案，那肯定不是一个好方案；反之亦然（方案测评标准）</div><div class="line">      </div><div class="line">命名空间是一种绝妙的理念，我们应当多加利用（倡导与号召）</div></pre></td></tr></table></figure><p>上升到开发哲学上，任何语言都是适用的</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;虽然python不是我的入门语言，之前一直抵触它的缩进语法，但通过《python宝典》的入门学习，发现python成为当前最热门的语言不是偶然。&lt;/p&gt;
&lt;p&gt;python社区和语言一起成长，融合了多种语言的特性及优点。&lt;/p&gt;
&lt;p&gt;刚试着用import this 查看了
      
    
    </summary>
    
    
      <category term="python" scheme="http://www.jk-kj.com/tags/python/"/>
    
      <category term="开发哲学" scheme="http://www.jk-kj.com/tags/%E5%BC%80%E5%8F%91%E5%93%B2%E5%AD%A6/"/>
    
  </entry>
  
</feed>
